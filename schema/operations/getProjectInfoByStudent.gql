fragment TimelineItemChildren on ProjectTimelineItem {
  type
  elementType
  status
  start
  end
  order
}

fragment ProjectReviewsInfo on ProjectReviewsInfo {
  reviewByStudentCount
  relevantReviewByStudentsCount
  reviewByInspectionStaffCount
  relevantReviewByInspectionStaffCount
  p2pRequirementStatus
}

fragment TimelineItem on ProjectTimelineItem {
  type
  status
  start
  end
  children {
    ...TimelineItemChildren
  }
}

fragment CurrentInternshipTaskInfo on StudentTask {
  id
  taskId
  task {
    id
    assignmentType
    taskSolutionType
    studentTaskAdditionalAttributes {
      cookiesCount
      maxCodeReviewCount
      codeReviewCost
      ciCdMode
    }
    checkTypes
    taskSolutionType
  }
  lastAnswer {
    id
  }
  teamSettings {
    ...teamSettingsInfo
  }
}

fragment RetrySettings on ModuleAttemptsSettings {
  maxModuleAttempts
  isUnlimitedAttempts
}

fragment teamSettingsInfo on TeamSettings {
  teamCreateOption
  minAmountMember
  maxAmountMember
  enableSurrenderTeam
}

fragment StudentGoalRetryInfo on StudentGoalRetryInfo {
  totalRetryValue
  usedRetryCount
  unlimitedAttempts
}

fragment P2PInfo on P2PChecksInfo {
  cookiesCount
  periodOfVerification
  projectReviewsInfo {
    ...ProjectReviewsInfo
  }
}

fragment ModuleCoverInfo on ModuleCoverInformation {
  isOwnStudentTimeline
  softSkills {
    softSkillId
    softSkillName
    totalPower
    maxPower
    currentUserPower
    achievedUserPower
    teamRole
  }
  timeline {
    ...TimelineItem
  }
}

fragment ProjectInfo on StudentModule {
  id
  moduleTitle
  finalPercentage
  finalPoint
  goalExecutionType
  displayedGoalStatus
  accessBeforeStartProgress
  resultModuleCompletion
  finishedExecutionDateByScheduler
  durationFromStageSubjectGroupPlan
  currentAttemptNumber
  isDeadlineFree
  isRetryAvailable
  localCourseId
  courseBaseParameters {
    isGradedCourse
  }
  teamSettings {
    ...teamSettingsInfo
  }
  studyModule {
    id
    idea
    duration
    goalPoint
    retrySettings {
      ...RetrySettings
    }
    levels {
      id
      goalElements {
        id
        tasks {
          id
          taskId
        }
      }
    }
  }
  currentTask {
    ...CurrentInternshipTaskInfo
  }
}

query getProjectInfoByStudent($goalId: ID!, $studentId: UUID!) {
  school21 {
    getModuleById(goalId: $goalId, studentId: $studentId) {
      ...ProjectInfo
    }
    getModuleCoverInformation(goalId: $goalId, studentId: $studentId) {
      ...ModuleCoverInfo
    }
    getP2PChecksInfo(goalId: $goalId, studentId: $studentId) {
      ...P2PInfo
    }
    getGoalRetryInfo(goalId: $goalId, studentId: $studentId) {
      ...StudentGoalRetryInfo
    }
  }
}